{"name": "Test adding a food to a meal", "status": "broken", "statusDetails": {"message": "_pytest.fixtures.FixtureLookupError: ('mocker', <SubRequest 'mock_firebase' for <Coroutine test_create_meal_food>>)", "trace": "file W:\\pyProjects\\vitalSyncBackend-v2\\tests\\test_meal_foods.py, line 10\n  @allure.feature(\"Meal Foods\")\n  @allure.story(\"Create Meal Food\")\n  @allure.title(\"Test adding a food to a meal\")\n  @pytest.mark.asyncio\n  async def test_create_meal_food(client, test_db, mock_firebase):\n      user = User(id=\"test_user_id\", email=\"test@example.com\")\n      meal = Meal(id=\"meal1\", user_id=\"test_user_id\", name=\"Breakfast\")\n      food = Food(id=\"food1\", name=\"Oatmeal\", calories=150.0, protein=5.0, carbs=27.0, fat=3.0)\n      test_db.add_all([user, meal, food])\n      test_db.commit()\n\n      headers = {\"Authorization\": \"Bearer valid_token\"}\n      meal_food_data = {\n          \"food_id\": \"food1\",\n          \"quantity\": 1.0,\n          \"name\": \"Oatmeal\",\n          \"calories\": 150.0,\n          \"protein\": 5.0,\n          \"carbs\": 27.0,\n          \"fat\": 3.0\n      }\n      response = await client.post(\"/api/v1/meals/meal1/foods\", json=meal_food_data, headers=headers)\n      assert response.status_code == status.HTTP_201_CREATED\n      assert response.json()[\"quantity\"] == 1.0\nfile W:\\pyProjects\\vitalSyncBackend-v2\\tests\\conftest.py, line 60\n  @pytest.fixture\n  def mock_firebase(mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _session_event_loop, anyio_backend, anyio_backend_name, anyio_backend_options, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, client, doctest_namespace, event_loop, event_loop_policy, free_tcp_port, free_tcp_port_factory, free_udp_port, free_udp_port_factory, mock_firebase, mock_qdrant, monkeypatch, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, test_db, tests/test_meal_foods.py::<event_loop>, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, unused_tcp_port, unused_tcp_port_factory, unused_udp_port, unused_udp_port_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\nW:\\pyProjects\\vitalSyncBackend-v2\\tests\\conftest.py:60"}, "start": 1753961207708, "stop": 1753961207708, "uuid": "55b672a1-55d7-4146-b4a9-cca73c49a56b", "historyId": "31ec4f50f87679de490aa4e4f336957d", "testCaseId": "31ec4f50f87679de490aa4e4f336957d", "fullName": "tests.test_meal_foods#test_create_meal_food", "labels": [{"name": "feature", "value": "Meal Foods"}, {"name": "story", "value": "Create Meal Food"}, {"name": "tag", "value": "asyncio"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_meal_foods"}, {"name": "host", "value": "Abhay-PC"}, {"name": "thread", "value": "27920-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_meal_foods"}]}